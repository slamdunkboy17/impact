{"ast":null,"code":"// customChartPlugin.js\nexport function drawQuadrantsPlugin(Chart) {\n  function drawQuadrants(chart) {\n    const ctx = chart.ctx;\n    const chartArea = chart.chartArea;\n    const midX = (chartArea.left + chartArea.right) / 2;\n    const midY = (chartArea.top + chartArea.bottom) / 2;\n    ctx.save();\n    ctx.globalAlpha = 0.2;\n\n    // Top-left quadrant (Red)\n    ctx.fillStyle = 'red';\n    ctx.fillRect(chartArea.left, chartArea.top, midX - chartArea.left, midY - chartArea.top);\n\n    // Top-right quadrant (Green)\n    ctx.fillStyle = 'green';\n    ctx.fillRect(midX, chartArea.top, chartArea.right - midX, midY - chartArea.top);\n\n    // Bottom-left quadrant (Blue)\n    ctx.fillStyle = 'blue';\n    ctx.fillRect(chartArea.left, midY, midX - chartArea.left, chartArea.bottom - midY);\n\n    // Bottom-right quadrant (Yellow)\n    ctx.fillStyle = 'yellow';\n    ctx.fillRect(midX, midY, chartArea.right - midX, chartArea.bottom - midY);\n    ctx.restore();\n  }\n  return {\n    id: 'customQuadrantPlugin',\n    beforeDraw: chart => {\n      drawQuadrants(chart);\n    }\n  };\n}","map":{"version":3,"names":["drawQuadrantsPlugin","Chart","drawQuadrants","chart","ctx","chartArea","midX","left","right","midY","top","bottom","save","globalAlpha","fillStyle","fillRect","restore","id","beforeDraw"],"sources":["/Users/lassop/leadership-test/src/graph-shading.js"],"sourcesContent":["// customChartPlugin.js\nexport function drawQuadrantsPlugin(Chart) {\n    function drawQuadrants(chart) {\n        const ctx = chart.ctx;\n        const chartArea = chart.chartArea;\n        const midX = (chartArea.left + chartArea.right) / 2;\n        const midY = (chartArea.top + chartArea.bottom) / 2;\n\n        ctx.save();\n        ctx.globalAlpha = 0.2;\n\n    // Top-left quadrant (Red)\n    ctx.fillStyle = 'red';\n    ctx.fillRect(chartArea.left, chartArea.top, midX - chartArea.left, midY - chartArea.top);\n\n    // Top-right quadrant (Green)\n    ctx.fillStyle = 'green';\n    ctx.fillRect(midX, chartArea.top, chartArea.right - midX, midY - chartArea.top);\n\n    // Bottom-left quadrant (Blue)\n    ctx.fillStyle = 'blue';\n    ctx.fillRect(chartArea.left, midY, midX - chartArea.left, chartArea.bottom - midY);\n\n    // Bottom-right quadrant (Yellow)\n    ctx.fillStyle = 'yellow';\n    ctx.fillRect(midX, midY, chartArea.right - midX, chartArea.bottom - midY);\n    \n        ctx.restore();\n    }\n\n    return {\n        id: 'customQuadrantPlugin',\n        beforeDraw: (chart) => {\n            drawQuadrants(chart);\n        }\n    };\n}\n\n\n"],"mappings":"AAAA;AACA,OAAO,SAASA,mBAAmBA,CAACC,KAAK,EAAE;EACvC,SAASC,aAAaA,CAACC,KAAK,EAAE;IAC1B,MAAMC,GAAG,GAAGD,KAAK,CAACC,GAAG;IACrB,MAAMC,SAAS,GAAGF,KAAK,CAACE,SAAS;IACjC,MAAMC,IAAI,GAAG,CAACD,SAAS,CAACE,IAAI,GAAGF,SAAS,CAACG,KAAK,IAAI,CAAC;IACnD,MAAMC,IAAI,GAAG,CAACJ,SAAS,CAACK,GAAG,GAAGL,SAAS,CAACM,MAAM,IAAI,CAAC;IAEnDP,GAAG,CAACQ,IAAI,CAAC,CAAC;IACVR,GAAG,CAACS,WAAW,GAAG,GAAG;;IAEzB;IACAT,GAAG,CAACU,SAAS,GAAG,KAAK;IACrBV,GAAG,CAACW,QAAQ,CAACV,SAAS,CAACE,IAAI,EAAEF,SAAS,CAACK,GAAG,EAAEJ,IAAI,GAAGD,SAAS,CAACE,IAAI,EAAEE,IAAI,GAAGJ,SAAS,CAACK,GAAG,CAAC;;IAExF;IACAN,GAAG,CAACU,SAAS,GAAG,OAAO;IACvBV,GAAG,CAACW,QAAQ,CAACT,IAAI,EAAED,SAAS,CAACK,GAAG,EAAEL,SAAS,CAACG,KAAK,GAAGF,IAAI,EAAEG,IAAI,GAAGJ,SAAS,CAACK,GAAG,CAAC;;IAE/E;IACAN,GAAG,CAACU,SAAS,GAAG,MAAM;IACtBV,GAAG,CAACW,QAAQ,CAACV,SAAS,CAACE,IAAI,EAAEE,IAAI,EAAEH,IAAI,GAAGD,SAAS,CAACE,IAAI,EAAEF,SAAS,CAACM,MAAM,GAAGF,IAAI,CAAC;;IAElF;IACAL,GAAG,CAACU,SAAS,GAAG,QAAQ;IACxBV,GAAG,CAACW,QAAQ,CAACT,IAAI,EAAEG,IAAI,EAAEJ,SAAS,CAACG,KAAK,GAAGF,IAAI,EAAED,SAAS,CAACM,MAAM,GAAGF,IAAI,CAAC;IAErEL,GAAG,CAACY,OAAO,CAAC,CAAC;EACjB;EAEA,OAAO;IACHC,EAAE,EAAE,sBAAsB;IAC1BC,UAAU,EAAGf,KAAK,IAAK;MACnBD,aAAa,CAACC,KAAK,CAAC;IACxB;EACJ,CAAC;AACL"},"metadata":{},"sourceType":"module","externalDependencies":[]}