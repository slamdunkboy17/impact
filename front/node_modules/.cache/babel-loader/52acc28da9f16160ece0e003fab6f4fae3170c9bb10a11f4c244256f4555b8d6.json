{"ast":null,"code":"var _jsxFileName = \"/Users/lassop/leadership-test/src/Results.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\nimport { Scatter } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Results() {\n  _s();\n  const [userData, setUserData] = useState(null);\n  const [selectedInfo, setSelectedInfo] = useState(\"\");\n  const chartRef = useRef(null);\n  const location = useLocation();\n  useEffect(() => {\n    const queryParams = new URLSearchParams(location.search);\n    const email = queryParams.get('email');\n    if (email) {\n      axios.get(`http://localhost:3001/api/user-data?email=${email}`).then(response => {\n        setUserData(response.data);\n      }).catch(error => {\n        console.error('Error fetching user data:', error);\n      });\n    }\n  }, [location]);\n  const medianX = 18; // Adjust these based on your data\n  const medianY = 18;\n  function onChartClick(evt) {\n    if (!chartRef.current) return;\n    const chart = chartRef.current;\n    const canvasPosition = chart.canvas.getBoundingClientRect();\n    const x = evt.clientX - canvasPosition.left;\n    const y = evt.clientY - canvasPosition.top;\n    const xValue = chart.scales.x.getValueForPixel(x);\n    const yValue = chart.scales.y.getValueForPixel(y);\n    if (Math.abs(xValue - medianX) < 3 && Math.abs(yValue - medianY) < 3) {\n      setSelectedInfo(\"Center Area Information\");\n    } else if (xValue > medianX) {\n      setSelectedInfo(yValue > medianY ? \"Quadrant 1 Information\" : \"Quadrant 4 Information\");\n    } else {\n      setSelectedInfo(yValue > medianY ? \"Quadrant 2 Information\" : \"Quadrant 3 Information\");\n    }\n  }\n  const chartData = userData ? {\n    datasets: [{\n      label: 'Leadership Style',\n      data: [{\n        x: parseInt(userData.winningFocus),\n        y: parseInt(userData.teamFocus)\n      }],\n      backgroundColor: 'rgba(255, 99, 132, 1)',\n      pointRadius: 10\n    }]\n  } : {};\n  const options = {\n    aspectRatio: 1,\n    onClick: onChartClick,\n    scales: {\n      x: {\n        type: 'linear',\n        position: 'bottom',\n        min: 0,\n        max: 40\n      },\n      y: {\n        min: 0,\n        max: 40\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"results-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Your Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), userData ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: /*#__PURE__*/_jsxDEV(Scatter, {\n            ref: chartRef,\n            data: chartData,\n            options: options\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-display\",\n          children: selectedInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading results...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(Results, \"OGdA/L6rGfxoDS83Cu0IzaVhWFs=\", false, function () {\n  return [useLocation];\n});\n_c = Results;\nexport default Results;\nvar _c;\n$RefreshReg$(_c, \"Results\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","useLocation","Scatter","jsxDEV","_jsxDEV","Fragment","_Fragment","Results","_s","userData","setUserData","selectedInfo","setSelectedInfo","chartRef","location","queryParams","URLSearchParams","search","email","get","then","response","data","catch","error","console","medianX","medianY","onChartClick","evt","current","chart","canvasPosition","canvas","getBoundingClientRect","x","clientX","left","y","clientY","top","xValue","scales","getValueForPixel","yValue","Math","abs","chartData","datasets","label","parseInt","winningFocus","teamFocus","backgroundColor","pointRadius","options","aspectRatio","onClick","type","position","min","max","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["/Users/lassop/leadership-test/src/Results.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { useLocation } from 'react-router-dom';\nimport { Scatter } from 'react-chartjs-2';\nimport 'chart.js/auto';\n\nfunction Results() {\n  const [userData, setUserData] = useState(null);\n  const [selectedInfo, setSelectedInfo] = useState(\"\");\n  const chartRef = useRef(null);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    const queryParams = new URLSearchParams(location.search);\n    const email = queryParams.get('email');\n    if (email) {\n      axios.get(`http://localhost:3001/api/user-data?email=${email}`)\n        .then(response => {\n          setUserData(response.data);\n        })\n        .catch(error => {\n          console.error('Error fetching user data:', error);\n        });\n    }\n  }, [location]);\n\n  const medianX = 18; // Adjust these based on your data\n  const medianY = 18;\n\n  function onChartClick(evt) {\n    if (!chartRef.current) return;\n\n    const chart = chartRef.current;\n    const canvasPosition = chart.canvas.getBoundingClientRect();\n    const x = evt.clientX - canvasPosition.left;\n    const y = evt.clientY - canvasPosition.top;\n    const xValue = chart.scales.x.getValueForPixel(x);\n    const yValue = chart.scales.y.getValueForPixel(y);\n\n    if (Math.abs(xValue - medianX) < 3 && Math.abs(yValue - medianY) < 3) {\n      setSelectedInfo(\"Center Area Information\");\n    } else if (xValue > medianX) {\n      setSelectedInfo(yValue > medianY ? \"Quadrant 1 Information\" : \"Quadrant 4 Information\");\n    } else {\n      setSelectedInfo(yValue > medianY ? \"Quadrant 2 Information\" : \"Quadrant 3 Information\");\n    }\n  }\n\n  const chartData = userData ? {\n    datasets: [{\n      label: 'Leadership Style',\n      data: [{ x: parseInt(userData.winningFocus), y: parseInt(userData.teamFocus) }],\n      backgroundColor: 'rgba(255, 99, 132, 1)',\n      pointRadius: 10,\n    }]\n  } : {};\n\n  const options = {\n    aspectRatio: 1,\n    onClick: onChartClick,\n    scales: {\n      x: { type: 'linear', position: 'bottom', min: 0, max: 40 },\n      y: { min: 0, max: 40 }\n    }\n  };\n\n  return (\n    <div className=\"results-container\">\n      <div className=\"centered-content\">\n        <h1>Your Results</h1>\n        {userData ? (\n          <>\n            <div className=\"chart-container\">\n              <Scatter ref={chartRef} data={chartData} options={options} />\n            </div>\n            <div className=\"info-display\">{selectedInfo}</div>\n          </>\n        ) : <p>Loading results...</p>}\n      </div>\n    </div>\n  );\n}\n\nexport default Results;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}